{"version":3,"sources":["webpack:///webpack/bootstrap ebc14ef16c05381097d1","webpack:///./src/index.tsx","webpack:///external \"React\"","webpack:///external \"ReactDOM\"","webpack:///./src/components/hello.tsx"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACtCA,oCAA8B;AAC9B,0CAAkC;AAClC,sCAA0C;AAE1C,mBAAM,CAAC,oBAAC,aAAK,IAAC,QAAQ,EAAC,YAAY,EAAC,SAAS,EAAC,OAAO,GAAG,EACpD,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;;;;;;;ACLpC,wB;;;;;;ACAA,2B;;;;;;;;;;;;ACAA,oCAA8B;AAO9B,eAAc;AACd,iDAAgD;AAChD,mEAAkE;AAClE,KAAI;AAEJ;KAA2B,yBAAsC;KAAjE;;KAIA,CAAC;KAHG,sBAAM,GAAN;SACI,MAAM,CAAC;;aAAgB,IAAI,CAAC,KAAK,CAAC,QAAQ;;aAAO,IAAI,CAAC,KAAK,CAAC,SAAS;iBAAO;KAChF,CAAC;KACL,YAAC;AAAD,EAAC,CAJ0B,KAAK,CAAC,SAAS,GAIzC;AAJY,uBAAK","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ebc14ef16c05381097d1","import * as React from 'react'\nimport { render } from 'react-dom'\nimport { Hello } from './components/hello'\n\nrender(<Hello compiler='Typescript' framework='React' />,\n    document.getElementById('app'));\n\n\n// WEBPACK FOOTER //\n// ./src/index.tsx","module.exports = React;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"React\"\n// module id = 1\n// module chunks = 0","module.exports = ReactDOM;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ReactDOM\"\n// module id = 2\n// module chunks = 0","import * as React from 'react'\n\nexport interface HelloProps {\n    compiler: string;\n    framework: string;\n}\n\n// 下面是无状态的功能组件\n// export const Hello = (props: HelloProps) => {\n//     <h1>Hello from {props.compiler} and {props.framework}!</h1>\n// }\n\nexport class Hello extends React.Component<HelloProps, undefined> {\n    render() {\n        return <h1>Hello from {this.props.compiler} and {this.props.framework}!</h1>\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/hello.tsx"],"sourceRoot":""}